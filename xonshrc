# Exports
$EDITOR = 'kak'
$VISUAL = 'kak'

# Aliases
aliases['l'] = 'ls --lah'

#$XONSH_TRACE_SUBPROC = True
def _tmux(args):
    if proc := !(tmux ls err>/dev/null):
        tmux attach -t @($(tmux ls).split(":")[0])
    else:
        tmux @(args)
aliases['tm'] = _tmux

def _kak(args):
    git_dir = Path($(git rev-parse --show-toplevel).strip()).name
    cur_dir = Path($(pwd).strip()).name
    if !(jobs | grep -q 'kak'):
        fg @(re.search(r'\[(\d+)\].*kak', $(jobs)).group(1))
    elif !(kak -l | grep -q @(f'^{git_dir}$')):
        kak -c @(git_dir) @(args)
    elif !(kak -l | grep -q @(f'^{cur_dir}$')):
        kak -c @(cur_dir) @(args)
    else:
        kak -s @(cur_dir) @(args)
aliases['e'] = _kak


# https://xon.sh/xontribs.html
XONTRIBS = {
    "apt_tabcomplete": "xonsh-apt-tabcomplete",
    "argcomplete": "xontrib-argcomplete",
    "autovox": None,
    "back2dir": "xontrib-back2dir",
    "broot": "xontrib-broot",
    "cmd_done": "xontrib-cmd-durations",
    "coreutils": None,
    "docker_tabcomplete": "xonsh-docker-tabcomplete",
    "fzf-widgets": "xontrib-fzf-widgets",
    "hist_navigator": "xontrib-hist-navigator",
    "output_search": "xontrib-output-search",
    "pdb": None,
    "pipeliner": "xontrib-pipeliner",
    "prompt_ret_code": None,
    "readable-traceback": "xontrib-readable-traceback",
    "ssh_agent": "xontrib-ssh-agent",
    "vox": None,
    "whole_word_jumping": None,
    "xog": None,
    "z": "xontrib-z",
}

# Before loading xontribs
$XONTRIB_OUTPUT_SEARCH_KEY='i'
$fzf_history_binding = "c-r"
$fzf_ssh_binding = "c-s"
$fzf_file_binding = "c-t"
#$fzf_dir_binding = "c-g"

xontrib load @(XONTRIBS.keys())

aliases["xontribs"] = "xpip install -U @(XONTRIBS.values()); xontrib load @(XONTRIBS.keys())"
