# Theme
colorscheme gruvbox
addhl global/ show-matching
addhl global/ number-lines -hlcursor
addhl global/ wrap -word -marker "…"
addhl global/ show-whitespaces -tab "»" -tabpad " " -lf " " -spc " " -nbsp "·"

# UI
set-option -add global ui_options "ncurses_assistant=off"
set-option -add global ui_options "ncurses_set_title=true"
set-option -add global ui_options "ncurses_enable_mouse=false"

# Auto-reload buffers
set-option global autoreload yes

# Search highlighting
set global incsearch true

# Case-insensitive search
map -docstring 'Case-insensitive search' global user '/' /(?i)
map -docstring 'Case-insensitive reverse search' global user '<a-/>' <a-/>(?i)
map -docstring 'Case-insensitive search (extend)' global user '?' ?(?i)
map -docstring 'Case-insensitive reverse search (extend)' global user '<a-?>' <a-?>(?i)

# Simple file finder
define-command -docstring 'find <file>: find a file' \
    -params 1 \
    -shell-script-candidates %{ find * -type f } \
    find %{
        edit %arg{1}
    }
alias global f find

# Git file finder
define-command -docstring 'gitf <pattern>: git file finder' \
    -params 1 \
    -shell-script-candidates %{ git ls-files } \
    gitf %{
        edit %arg{1}
    }

# Show trailing whitespaces
addhl global/ dynregex "[^\S\n]+$" 0:black,red

# Strip trailing whitespaces
define-command -docstring 'strip-tws: strip trailing whitespaces' \
    -params 0 \
    strip-tws %{
        exec -draft %{ %s[^\S\n]+$<ret>d }
    }

# kakoune-cscope mappings
map -docstring 'Cscope menu' global user 'c' '<a-i>w:cscope-menu<ret>'

# Search with Ag
set-option global grepcmd 'ag --vimgrep'
map global normal <c-k> '<a-i>w:grep <c-r>.<ret>'

# Indent when tab is pressed
map global insert <tab> '<a-;><gt>'
map global insert <s-tab> '<a-;><lt>'

# Fold selection
map -docstring 'Fold selection at 80 columns' global user 'w' '|fold -s | sed "s/\s*$//"<ret>gh'

# Go is indented with tabs
hook global WinSetOption filetype=go %{
    set-option window indentwidth 0
}

# Shell is indented with tabs
hook global WinSetOption filetype=sh %{
    set-option window indentwidth 0
}

# Tab cycles through completions
hook global InsertCompletionShow .* %{
    map window insert <tab> <c-n>
    map window insert <s-tab> <c-p>
}
hook global InsertCompletionHide .* %{
    unmap window insert <tab> <c-n>
    unmap window insert <s-tab> <c-p>
}

# Enable LSP if it is available
evaluate-commands %sh{kak-lsp --kakoune -s $kak_session}
map -docstring 'LSP menu' global user 'l' ': enter-user-mode lsp<ret>'

# edit-or-dir
unalias global e edit
alias global e edit-or-dir

# fzf
set-option global fzf_file_command 'ag'
map -docstring 'LSP menu' global user 'f' ': enter-user-mode fzf<ret>'
map global normal <c-f> ': enter-user-mode fzf<ret>f'

alias global x write-quit
